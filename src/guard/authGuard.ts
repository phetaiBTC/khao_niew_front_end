// router/authGuard.ts
import { useAuthStore } from "@/modules/auth/store/useAuthStore";
import type { NavigationGuardNext, RouteLocationNormalized } from "vue-router";

export function authGuard(
  to: RouteLocationNormalized,
  _from: RouteLocationNormalized,
  next: NavigationGuardNext
) {
  const authStore = useAuthStore();

  // ‚úÖ 1. route ‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á login)
  if (to.meta.public_auth) {
    return next();
  }

  // ‚úÖ 2. ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login ‚Üí ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
  if (!authStore.isAuthenticated) {
    return next({ name: "Login" });
  }

  // ‚úÖ 3. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î role ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÑ‡∏ß‡πâ‡πÉ‡∏ô meta (‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏Å‡∏ß‡πà‡∏≤)
  if (to.meta.roles && Array.isArray(to.meta.roles)) {
    const allowedRoles = to.meta.roles as string[];
    if (!allowedRoles.includes(authStore.role)) {
      // üîí ‡∏ñ‡πâ‡∏≤ role ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‚Üí redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á role ‡∏ô‡∏±‡πâ‡∏ô
      const redirectMap: Record<string, string> = {
        admin: "dashboard",
        company: "company.concert",
      };
      const redirectTo = redirectMap[authStore.role] || "Login";
      return next({ name: redirectTo });
    }
  }

  // ‚úÖ 4. ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‚Üí ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏î‡πâ
  return next();
}
