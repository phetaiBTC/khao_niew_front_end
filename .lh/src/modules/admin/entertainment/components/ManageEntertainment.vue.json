{
    "sourceFile": "src/modules/admin/entertainment/components/ManageEntertainment.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1760630661218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1760630690707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n <template>\r\n     <a-modal v-model:open=\"localOpen\" :footer=\"null\" @ok=\"onClose\" @cancel=\"onClose\" :width=\"'400px'\" centered>\r\n         <template #title>\r\n-            <h1 class=\"text-xl text-center\" style=\"font-weight: 900;\">{{ $t('add') + ' ' + $t('entertainment') }}</h1>tttt\r\n+            <h1 class=\"text-xl text-center\" style=\"font-weight: 900;\">{{ $t('add') + ' ' + $t('entertainment') }}</h1>\r\n         </template>\r\n         <a-form layout=\"vertical\" ref=\"formRef\" :model=\"formState\" :rules=\"rulesEntertainment\" @finish=\"onSumit\">\r\n             <a-row>\r\n                 <a-divider\r\n"
                },
                {
                    "date": 1760631049043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,10 @@\n     }\r\n };\r\n \r\n \r\n+\r\n+\r\n const formState = reactive<IEntertainment>({\r\n     id: null,\r\n     title: '',\r\n     description: '',\r\n"
                },
                {
                    "date": 1760631054602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         options.onError()\r\n     }\r\n };\r\n \r\n-const hand\r\n+const handl\r\n \r\n \r\n const formState = reactive<IEntertainment>({\r\n     id: null,\r\n"
                },
                {
                    "date": 1760633195114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,137 @@\n+<template>\r\n+    <a-modal v-model:open=\"localOpen\" :footer=\"null\" @ok=\"onClose\" @cancel=\"onClose\" :width=\"'400px'\" centered>\r\n+        <template #title>\r\n+            <h1 class=\"text-xl text-center\" style=\"font-weight: 900;\">{{ $t('add') + ' ' + $t('entertainment') }}</h1>\r\n+        </template>\r\n+        <a-form layout=\"vertical\" ref=\"formRef\" :model=\"formState\" :rules=\"rulesEntertainment\" @finish=\"onSumit\">\r\n+            <a-row>\r\n+                <a-divider\r\n+                    style=\"margin: 0 !important; color: var(--ant-primary-color); border-color: var(--ant-primary-color);\">\r\n+                    {{ $t('entertainment') }}\r\n+                </a-divider>\r\n+                <a-col :span=\"24\">\r\n+                    <FormInputString label=\"title\" v-model=\"formState.title\" :placeholder=\"$t('title')\"\r\n+                        :prefix=\"BulbOutlined\" />\r\n+                </a-col>\r\n+                <a-col :span=\"24\">\r\n+                    <a-form-item :label=\"$t('description')\" name=\"description\">\r\n+                        <a-textarea v-model:value=\"formState.description\" placeholder=\"...\" allow-clear />\r\n+                    </a-form-item>\r\n+                </a-col>\r\n+                <a-col :span=\"24\">\r\n+                    <a-upload v-model:file-list=\"fileList\" name=\"file\" :custom-request=\"handleUpload\">\r\n+                        <a-button>\r\n+                            <UploadOutlined /> เลือกไฟล์\r\n+                        </a-button>\r\n+                    </a-upload>\r\n+                </a-col>\r\n+                <a-col :span=\"24\">\r\n+                    <div class=\"w-full overflow-x-scroll my-5\">\r\n+                        <div class=\"flex flex-nowrap gap-2 flex-row\">\r\n+                            <div v-for=\"image in props.data?.images\" :key=\"image.id\" class=\"relative flex-shrink-0\">\r\n+                                <a-image\r\n+                                    :src=\"image.url\"\r\n+                                    style=\"width: 120px; height: 120px; object-fit: cover; border-radius: 8px;\"\r\n+                                    :preview=\"true\"\r\n+                                />\r\n+                                <a-button\r\n+                                    type=\"text\"\r\n+                                    danger\r\n+                                    size=\"small\"\r\n+                                    class=\"absolute -top-2 -right-2 bg-red-500 hover:bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center shadow-lg\"\r\n+                                    @click=\"handleDeleteImage(image.id as number)\"\r\n+                                >\r\n+                                    <CloseOutlined class=\"text-xs\" />\r\n+                                </a-button>\r\n+                            </div>\r\n+                        </div>\r\n+                    </div>\r\n+                </a-col>\r\n+                <a-col :span=\"24\">\r\n+                    <div class=\"flex justify-end gap-2\">\r\n+                        <a-button @click=\"onClose\">{{ $t('cancel') }}</a-button>\r\n+                        <a-button type=\"primary\" htmlType=\"submit\" :loading=\"loadingEntertainment\">{{ $t('save')\r\n+                            }}</a-button>\r\n+                    </div>\r\n+                </a-col>\r\n+            </a-row>    \r\n+        </a-form>\r\n+    </a-modal>\r\n+</template>\r\n+\r\n+<script setup lang=\"ts\">\r\n+import FormInputString from '@/components/FormInputString.vue';\r\n+import { BulbOutlined, UploadOutlined, CloseOutlined } from '@ant-design/icons-vue';\r\n+import { computed, reactive, ref, watch } from 'vue';\r\n+import { rulesEntertainment } from '../rules';\r\n+import type { IEntertainment, EntertainmentEntity } from '../types';\r\n+import { useEntertainment } from '../composables/useEntertainment';\r\n+import { useImage } from '@/modules/images/composables/useImage';\r\n+const fileList = ref([]);\r\n+const { createImage, deleteImage } = useImage()\r\n+const { createEntertainment, updateEntertainment, loadingEntertainment } = useEntertainment()\r\n+const formRef = ref()\r\n+const props = defineProps<{\r\n+    open: boolean,\r\n+    data: EntertainmentEntity | null\r\n+}>()\r\n+const emit = defineEmits(['isOpen'])\r\n+\r\n+const handleUpload = async (options: any) => {\r\n+    try {\r\n+        await createImage({ file: options.file })\r\n+        options.onSuccess()\r\n+    } catch (error) {\r\n+        console.error(error)\r\n+        options.onError()\r\n+    }\r\n+};\r\n+\r\n+const handleDeleteImage = async (id: number) => {\r\n+    try {\r\n+        await deleteImage(id)\r\n+       console.log('Delete image with id success:', id)\r\n+    } catch (error) {\r\n+        console.error(error)\r\n+    }\r\n+\r\n+}\r\n+\r\n+\r\n+const formState = reactive<IEntertainment>({\r\n+    id: null,\r\n+    title: '',\r\n+    description: '',\r\n+    imageIds: []\r\n+})\r\n+const localOpen = computed({\r\n+    get: () => props.open,\r\n+    set: (val) => emit('isOpen', val)\r\n+})\r\n+watch(\r\n+    () => props.data,\r\n+    (value) => {\r\n+        if (value) {\r\n+            formState.id = value.id\r\n+            formState.description = value.description\r\n+            formState.title = value.title\r\n+            formState.imageIds = value.images.map((item: any) => item.id)\r\n+        }\r\n+    }\r\n+)\r\n+const onClose = () => {\r\n+    formRef.value?.resetFields()\r\n+    emit('isOpen', false)\r\n+    fileList.value = []\r\n+}\r\n+const onSumit = async () => {\r\n+    if (props.data) {\r\n+        await updateEntertainment(formState)\r\n+    } else {\r\n+        await createEntertainment(formState)\r\n+    }\r\n+    onClose()\r\n+}\r\n+</script>\r\n+\r\n+<style scoped></style>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1760630661218,
            "name": "Commit-0",
            "content": "<template>\r\n    <a-modal v-model:open=\"localOpen\" :footer=\"null\" @ok=\"onClose\" @cancel=\"onClose\" :width=\"'400px'\" centered>\r\n        <template #title>\r\n            <h1 class=\"text-xl text-center\" style=\"font-weight: 900;\">{{ $t('add') + ' ' + $t('entertainment') }}</h1>tttt\r\n        </template>\r\n        <a-form layout=\"vertical\" ref=\"formRef\" :model=\"formState\" :rules=\"rulesEntertainment\" @finish=\"onSumit\">\r\n            <a-row>\r\n                <a-divider\r\n                    style=\"margin: 0 !important; color: var(--ant-primary-color); border-color: var(--ant-primary-color);\">\r\n                    {{ $t('entertainment') }}\r\n                </a-divider>\r\n                <a-col :span=\"24\">\r\n                    <FormInputString label=\"title\" v-model=\"formState.title\" :placeholder=\"$t('title')\"\r\n                        :prefix=\"BulbOutlined\" />\r\n                </a-col>\r\n                <a-col :span=\"24\">\r\n                    <a-form-item :label=\"$t('description')\" name=\"description\">\r\n                        <a-textarea v-model:value=\"formState.description\" placeholder=\"...\" allow-clear />\r\n                    </a-form-item>\r\n                </a-col>\r\n                <a-col :span=\"24\">\r\n                    <a-upload v-model:file-list=\"fileList\" name=\"file\" :custom-request=\"handleUpload\">\r\n                        <a-button>\r\n                            <UploadOutlined /> เลือกไฟล์\r\n                        </a-button>\r\n                    </a-upload>\r\n                </a-col>\r\n                <a-col :span=\"24\">\r\n                    <div class=\"w-full overflow-x-scroll my-5\">\r\n                        <div class=\"flex flex-nowrap gap-2 flex-row\">\r\n                            <a-image v-for=\"item in props.data?.images.map((item: any) => item.url)\"\r\n                                style=\"width: 100% !important;\" :src=\"item\" />\r\n                        </div>\r\n                    </div>\r\n                </a-col>\r\n                <a-col :span=\"24\">\r\n                    <div class=\"flex justify-end gap-2\">\r\n                        <a-button @click=\"onClose\">{{ $t('cancel') }}</a-button>\r\n                        <a-button type=\"primary\" htmlType=\"submit\" :loading=\"loadingEntertainment\">{{ $t('save')\r\n                            }}</a-button>\r\n                    </div>\r\n                </a-col>\r\n            </a-row>    \r\n        </a-form>\r\n    </a-modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport FormInputString from '@/components/FormInputString.vue';\r\nimport { BulbOutlined, UploadOutlined } from '@ant-design/icons-vue';\r\nimport { computed, reactive, ref, watch } from 'vue';\r\nimport { rulesEntertainment } from '../rules';\r\nimport type { IEntertainment, EntertainmentEntity } from '../types';\r\nimport { useEntertainment } from '../composables/useEntertainment';\r\nimport { useImage } from '@/modules/images/composables/useImage';\r\nconst fileList = ref([]);\r\nconst { createImage } = useImage()\r\nconst { createEntertainment, updateEntertainment, loadingEntertainment } = useEntertainment()\r\nconst formRef = ref()\r\nconst props = defineProps<{\r\n    open: boolean,\r\n    data: EntertainmentEntity | null\r\n}>()\r\nconst emit = defineEmits(['isOpen'])\r\n\r\nconst handleUpload = async (options: any) => {\r\n    try {\r\n        await createImage({ file: options.file })\r\n        options.onSuccess()\r\n    } catch (error) {\r\n        console.error(error)\r\n        options.onError()\r\n    }\r\n};\r\n\r\n\r\nconst formState = reactive<IEntertainment>({\r\n    id: null,\r\n    title: '',\r\n    description: '',\r\n    imageIds: []\r\n})\r\nconst localOpen = computed({\r\n    get: () => props.open,\r\n    set: (val) => emit('isOpen', val)\r\n})\r\nwatch(\r\n    () => props.data,\r\n    (value) => {\r\n        if (value) {\r\n            formState.id = value.id\r\n            formState.description = value.description\r\n            formState.title = value.title\r\n            formState.imageIds = value.images.map((item: any) => item.id)\r\n        }\r\n    }\r\n)\r\nconst onClose = () => {\r\n    formRef.value?.resetFields()\r\n    emit('isOpen', false)\r\n    fileList.value = []\r\n}\r\nconst onSumit = async () => {\r\n    if (props.data) {\r\n        await updateEntertainment(formState)\r\n    } else {\r\n        await createEntertainment(formState)\r\n    }\r\n    onClose()\r\n}\r\n</script>\r\n\r\n<style scoped></style>"
        }
    ]
}